// http://ionicframework.com/docs/theming/
//***********************************************
// Transformation Mixins
//***********************************************
@mixin rotate($degrees) {
  @include transform( rotate($degrees) );
}
@mixin scale($ratio) {
  @include transform( scale($ratio) );
}
@mixin translate($x, $y) {
  @include transform( translate($x, $y) );
}
@mixin skew($x, $y) {
  @include transform( skew($x, $y) );
  -webkit-backface-visibility: hidden;
}
@mixin translate3d($x, $y, $z) {
  @include transform( translate3d($x, $y, $z) );
}
@mixin translateY($y) {
  @include transform( translateY($y) );
}
@mixin translateZ($z) {
  @include transform( translateZ($z) );
}
@mixin transform($val) {
  -webkit-transform: $val;
  transform: $val;
}

@mixin transform-origin($left, $top) {
  -webkit-transform-origin: $left $top;
          transform-origin: $left $top;
}
///***********************************************
//  Animations
//***********************************************/
// https://dvcs.w3.org/hg/FXTF/raw-file/tip/filters/index.html 
//
// grayscale      ex: filter: grayscale(100%);
// sepia          ex: filter: sepia(100%);
// saturate       ex: filter: saturate(0%);
// hue-rotate     ex: filter: hue-rotate(45deg);
// invert         ex: filter: invert(100%);
// brightness     ex: filter: brightness(15%);
// contrast       ex: filter: contrast(200%);
// blur           ex: filter: blur(2px);

@mixin filter($filter-type,$filter-amount) { 
  -webkit-filter: $filter-type+unquote('(#{$filter-amount})');
  -moz-filter: $filter-type+unquote('(#{$filter-amount})');
  -ms-filter: $filter-type+unquote('(#{$filter-amount})');
  -o-filter: $filter-type+unquote('(#{$filter-amount})');
  filter: $filter-type+unquote('(#{$filter-amount})');
}

@mixin animation-duration($duration) {
 -webkit-animation-duration: $duration;
         animation-duration: $duration;
}
@mixin animation-direction($direction) {
 -webkit-animation-direction: $direction;
         animation-direction: $direction;
}
@mixin animation-timing-function($animation-timing) {
 -webkit-animation-timing-function: $animation-timing;
         animation-timing-function: $animation-timing;
}
@mixin animation-fill-mode($fill-mode) {
 -webkit-animation-fill-mode: $fill-mode;
         animation-fill-mode: $fill-mode;
}
@mixin animation-name($name...) {
 -webkit-animation-name: $name;
         animation-name: $name;
}
@mixin animation-delay($delay) {
 -webkit-animation-delay: $delay;
         animation-delay: $delay;
}
@mixin animation-iteration-count($count) {
 -webkit-animation-iteration-count: $count;
         animation-iteration-count: $count;
}
@mixin animation-play-state($state) {
 -webkit-animation-play-state: $state;
         animation-play-state: $state;
}

@mixin animation($name, $duration, $timingFn:linear, $delay:0, $iteration:1, $direction:normal, $fill-mode:none, $state:running) {
  @include animation-name($name);
  @include animation-duration($duration);
  @include animation-delay($delay);
  @include animation-direction($direction);
  @include animation-timing-function($timingFn);
  @include animation-iteration-count($iteration);
  @include animation-fill-mode($fill-mode);
  @include animation-play-state($state);
}

@mixin keyframes($animation-name) {
  @-webkit-keyframes #{$animation-name} {
    @content;
  }
  @-moz-keyframes #{$animation-name} {
    @content;
  }  
  @-ms-keyframes #{$animation-name} {
    @content;
  }
  @-o-keyframes #{$animation-name} {
    @content;
  }  
  @keyframes #{$animation-name} {
    @content;
  }
}


// App Global Sass
// --------------------------------------------------
// Put style rules here that you want to apply globally. These
// styles are for the entire app and not just one component.
// Additionally, this file can be also used as an entry point
// to import other Sass files to be included in the output CSS.
//
// Shared Sass variables, which can be used to adjust Ionic's
// default Sass variables, belong in "theme/variables.scss".
//
// To declare rules for a specific mode, create a child rule
// for the .md, .ios, or .wp mode classes. The mode class is
// automatically applied to the <body> element in the app.

/************************************************
Application General
************************************************/

ion-content {
  background-image: url('../assets/imgs/app_bg.png');
  background-size: cover;
  height: 100%;
  background-position: bottom;
}

.header-md:after, .footer-md:before {
  background-image: none;
}

ion-footer {
  ion-scroll {
    height: 71px;
    white-space: nowrap;
  }
}

.center-vertical {
  &.ion-grid, &[ion-grid], &.container {
    height: 100%;
    justify-content: center;
  }
}

.content-zone {
  background-size: auto 100%;
  background-position: center bottom;
  background-repeat: no-repeat;
  height: 100%;

  &.loading {
    margin-left: -200%;
  }
  &.loaded {
    @include animation(slide-in, .5s, linear);
  }
} 

/************************************************
Application Icons
************************************************/
@mixin appSpriteIcons($icon-list, $xstart, $ystart, $xoffset, $yoffset,
    $width, $height, $alternate: '[disabled]', $active: false, $touched:true){
  @for $i from 1 through length($icon-list){
    $name: nth($icon-list, $i);
    &.#{$name} {
      background-position: (-(($xstart + (($xoffset + $width) * ($i - 1))))) (-$ystart);
      width: $width;
      height: $height;
      @content;
      @if $yoffset > 0 {
        &#{$alternate} {
          background-position: (-($xstart + (($xoffset + $width) * ($i - 1)))) (-($ystart + $yoffset + $height));
        }
      }
      @if ($active) {
        &.active {
          background-position: (-($xstart + (($xoffset + $width) * ($i - 1)))) (-($ystart + 2*($yoffset + $height)));
        }
      }
      @if($touched) {
        &:active {
          @include scale(0.95);
          @include filter(brightness, 90%);
        }
      }
    }
  }
}

.app-icon {
  background-image: url('../assets/imgs/icons.png');
  background-color: transparent;
  background-repeat: no-repeat;
  display: inline-block;

  //Main menu Icons
  $icons: m-progress m-help m-contents m-intro;
  @include appSpriteIcons($icons, 50px, 50px, 10px, 10px, 90px, 90px);

  $icons: m-play;
  @include appSpriteIcons($icons, 50px, 300px, 24px, 24px, 176px, 176px);

  //General Actions
  $icons: accept cancel game-start-alt game-start close listen repeat home rewind forward verify help video
    act-classify act-select act-drag act-mark act-sort no-internet progress info intro next back;
  @include appSpriteIcons($icons, 50px, 750px, 30px, 30px, 70px, 70px);

  //General Actions Small icons
  $icons: close-sm listen-sm repeat-sm home-sm back-sm next-sm verify-sm help-sm info-sm;
  @include appSpriteIcons($icons, 1300px, 550px, 52, 52, 48px, 48px);

  //For settings and configuration
  $icons: settings tools;
  @include appSpriteIcons($icons, 1300px, 300px, 52px, 52px, 48px, 48px);

  //Contents icons
  $icons: content-audio content-video content-images content-docs content-links exit;
  @include appSpriteIcons($icons, 50px, 950px, 35px, 35px, 65px, 65px, $active:true);

  //Hover Media Icons
  $icons: media-audio media-video media-images media-docs media-links;
  @include appSpriteIcons($icons, 800px, 550px, 50, 0, 50px, 50px);

  //Hover General Icons
  $icons: lock;
  @include appSpriteIcons($icons, 1500px, 300px, 20, 0, 80px, 100px);

  $icons: lock-xs;
  @include appSpriteIcons($icons, 1600px, 300px, 73, 0, 27px, 33px);

  //Prize Icons
  $icons: prize-good prize-perfect prize-empty;
  @include appSpriteIcons($icons, 1700px, 300px, 57, 0, 43px, 43px);

  $icons: prize-good-xs prize-perfect-xs prize-empty-xs;
  @include appSpriteIcons($icons, 1700px, 350px, 71, 0, 29px, 29px);

  //Avatar icons
  $icons: avatar-1 avatar-2;
  @include appSpriteIcons($icons, 1300px, 500px, 40px, 0px, 60px, 76px);

  //Frames
  $icons: video-over img-frame;
  @include appSpriteIcons($icons, 250px, 300px, 57px, 0px, 93px, 91px);

  $icons: game-progress;
  @include appSpriteIcons($icons, 550px, 300px, 57px, 0px, 78px, 81px);

  $icons: arrow-black arrow-white;
  @include appSpriteIcons($icons, 647px, 948px, 75px, 0px, 125px, 75px);
}
/************************************************
Object Icons
************************************************/
.object-icon {
  background-image: url('../assets/game/img/shared/sprite_objects.png');
  background-color: transparent;
  background-repeat: no-repeat;
  display: inline-block;
  
  $icons: obj-arbol obj-casa obj-canasta obj-radio obj-cama obj-plato obj-vaso obj-vaca obj-perro obj-gato obj-sombrero;  
  @include appSpriteIcons($icons, 0px, 0px, 0px, 0px, 420px, 470px);
  
  $icons: obj-baston obj-cuchara obj-carro obj-zapato obj-camisa obj-pantalon obj-reloj obj-mesa obj-silla obj-moneda obj-caballo;
  @include appSpriteIcons($icons, 0px, 470px, 0px, 0px, 420px, 470px);

  $icons: obj-llave obj-lapiz obj-manzana obj-banano obj-pera obj-zanahoria obj-tomate obj-vestido obj-vela obj-computador obj-billete;
  @include appSpriteIcons($icons, 0px, 940px, 0px, 0px, 420px, 470px);

  $icons: obj-puerta obj-ventana obj-televisor obj-estufa obj-escoba obj-frasco obj-botella obj-gafas obj-balon obj-caja obj-bus;
  @include appSpriteIcons($icons, 0px, 1410px, 0px, 0px, 420px, 470px);

  $icons: obj-tenedor obj-bombillo obj-cuaderno obj-libro obj-ventilador obj-tijeras obj-telefono obj-flor obj-sol obj-luna obj-bicicleta;
  @include appSpriteIcons($icons, 0px, 1880px, 0px, 0px, 420px, 470px);

  $icons: obj-pastillas obj-cuchillo obj-olla obj-motocicleta obj-sombrilla obj-cepillo obj-anillo obj-chanclas obj-jabon obj-mu√±eca;
  @include appSpriteIcons($icons, 0px, 2350px, 0px, 0px, 420px, 470px);

}
/************************************************
Key Icons
************************************************/
.keyholder-icon {
  background-image: url('../assets/game/img/shared/sprite_keys.png');
  background-color: transparent;
  background-repeat: no-repeat;
  display: inline-block;
    
  $icons: keyholder;  
  @include appSpriteIcons($icons, 20px, 20px, 0px, 0px, 106px, 128px);  

  $icons: keyholder-wrong;  
  @include appSpriteIcons($icons, 20px, 400px, 0px, 0px, 106px, 128px);  
}

.tepuy-group-completed {
  .tepuy-correct {
    .keyholder-icon {
      $icons: keyholder;  
      @include appSpriteIcons($icons, 20px, 200px, 0px, 0px, 106px, 128px);  
    }
  }

  .tepuy-wrong {
    .keyholder-icon {
      $icons: keyholder;  
      @include appSpriteIcons($icons, 20px, 400px, 0px, 0px, 106px, 128px);  
    }
  }
}
/************************************************
Listen Interruptor Icons
************************************************/
.listen-icon {
  background-image: url('../assets/game/img/shared/sprite_listen.png');
  background-color: transparent;
  background-repeat: no-repeat;
  display: inline-block;
  @include transform-origin(left, top);
  
  $icons: listen-active;
  @include appSpriteIcons($icons, 20px, 20px, 0px, 0px, 180px, 180px);
  $icons: listen-inactive;
  @include appSpriteIcons($icons, 20px, 250px, 0px, 0px, 180px, 180px);
}
/***********************************************
  Animations
***********************************************/
.flashing {
  @include animation(flash-1, 4s, linear, $iteration:infinite);
}

.flashing-r {
  @include animation(flash-2, 4s, linear, $iteration:infinite);
}


@include keyframes(falling-buttons) {
  0% {
    @include translate(0, -1080px);
  }
  80% {
    @include translate(0, 50px);
  }
  90% {
    @include translate(0, -25px);
  }
  100% {
    @include translate(0, 0);
  }
}

@include keyframes(clouds){
  0% {
    margin-left: -100%;
  }
  100% {
    margin-left: 100%;
  }
}

@include keyframes(slide-in){
  0% {
    margin-left: -200%;
  }
  100% {
    margin-left: 0;
  }
}

@include keyframes(flash){
  0% { 
    opacity: 1.0; 
    @include scale(1);
  }
  50% { 
    opacity: 0.95;
    @include scale(.95);
  }
  100% { 
    opacity: 1.0;
    @include scale(1);
  }
}

@include keyframes(flash-1){
  0%, 25%, 50%, 100% { 
    opacity: 1.0; 
    @include scale(1);
  }
  12.5%, 37.5% { 
    opacity: 0.9; 
    @include scale(0.95);
  }
}

@include keyframes(flash-2){
  0%, 50%, 100% { 
    @include transform(rotate(0deg) scale(1));
  }
  12.5%, 37.5% { 
    @include transform(rotate(2deg) scale(0.95));
  }
  25% { 
    @include transform(rotate(-2deg) scale(1));
  }
}

@include keyframes(flash-3){
  0%, 25%, 50%, 100% { 
    @include filter(brightness, 100%);
  }
  12.5%, 37.5% { 
    @include filter(brightness, 50%);
  }
}
