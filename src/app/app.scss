// http://ionicframework.com/docs/theming/


// App Global Sass
// --------------------------------------------------
// Put style rules here that you want to apply globally. These
// styles are for the entire app and not just one component.
// Additionally, this file can be also used as an entry point
// to import other Sass files to be included in the output CSS.
//
// Shared Sass variables, which can be used to adjust Ionic's
// default Sass variables, belong in "theme/variables.scss".
//
// To declare rules for a specific mode, create a child rule
// for the .md, .ios, or .wp mode classes. The mode class is
// automatically applied to the <body> element in the app.

/************************************************
Application General
************************************************/

ion-content {
  background-image: url('../assets/imgs/app_bg.png');
  background-size: cover;
  height: 100%;
  background-position: bottom;
}

.header-md:after, .footer-md:before {
  background-image: none;
}

.center-vertical {
  &.ion-grid, &[ion-grid] {
    height: 100%;
    justify-content: center;
  }
}

/************************************************
Application Icons
************************************************/
@mixin appSpriteIcons($icon-list, $xstart, $ystart, $xoffset, $yoffset, $width, $height, $active: false){
  @for $i from 1 through length($icon-list){
    $name: nth($icon-list, $i);
    &.#{$name} {
      background-position: (-(($xstart + (($xoffset + $width) * ($i - 1))))) (-$ystart);
      width: $width;
      height: $height;
      @if $yoffset > 0 {
        &:hover {
          background-position: (-($xstart + (($xoffset + $width) * ($i - 1)))) (-($ystart + $yoffset + $height));
        }
      }
      @if ($active) {
          &.active {
            background-position: (-($xstart + (($xoffset + $width) * ($i - 1)))) (-($ystart + 2*($yoffset + $height)));
          }
      }
    }
  }
}

.app-icon {
  background-image: url('../assets/imgs/icons.png');
  background-color: transparent;
  background-repeat: no-repeat;
  display: inline-block;

  $menus: m-contents m-progress m-help;
  @include appSpriteIcons($menus, 50px, 50px, 10px, 10px, 90px, 90px);

  $menus: m-play;
  @include appSpriteIcons($menus, 350px, 50px, 24px, 24px, 176px, 176px);

  $actions: settings tools;
  @include appSpriteIcons($actions, 550px, 50px, 52px, 52px, 48px, 48px);

  $actions: close listen repeat home back next verify help;
  @include appSpriteIcons($actions, 750px, 50px, 30px, 30px, 70px, 70px);

  $actions: video;
  @include appSpriteIcons($actions, 1750px, 50px, 30px, 30px, 70px, 70px);

  $actions: play pause;
  @include appSpriteIcons($actions, 1850px, 50px, 27px, 27px, 73px, 73px);

  $actions: pause accept cancel game-start-y game-start-g;
  @include appSpriteIcons($actions, 1950px, 50px, 30px, 30px, 70px, 70px);

  $actions: act-classify act-select act-drag act-mark act-sort;
  @include appSpriteIcons($actions, 2900px, 50px, 30px, 30px, 70px, 70px);

  $actions: content-audio content-video content-images content-docs content-links;
  @include appSpriteIcons($actions, 3400px, 50px, 35px, 35px, 65px, 65px, true);

  $actions: exit no-internet;
  @include appSpriteIcons($actions, 3900px, 50px, 35px, 35px, 65px, 65px);

  $actions: media-audio media-video media-images media-docs media-links;
  @include appSpriteIcons($actions, 4100px, 50px, 50, 0, 50px, 50px);

  $actions: play-xs;
  @include appSpriteIcons($actions, 4600px, 50px, 85, 0, 15px, 15px);

  $actions: close-xs;
  @include appSpriteIcons($actions, 550px, 300px, 70px, 70px, 30px, 30px);

  $objects: quima-1 quima-2;
  @include appSpriteIcons($actions, 1550px, 300px, 40px, 0px, 60px, 76px);

}
/***********************************************/

//***********************************************
// Transformation Mixins
//***********************************************
@mixin rotate($degrees) {
  @include transform( rotate($degrees) );
}
@mixin scale($ratio) {
  @include transform( scale($ratio) );
}
@mixin translate($x, $y) {
  @include transform( translate($x, $y) );
}
@mixin skew($x, $y) {
  @include transform( skew($x, $y) );
  -webkit-backface-visibility: hidden;
}
@mixin translate3d($x, $y, $z) {
  @include transform( translate3d($x, $y, $z) );
}
@mixin translateZ($z) {
  @include transform( translateZ($z) );
}
@mixin transform($val) {
  -webkit-transform: $val;
  transform: $val;
}

@mixin transform-origin($left, $top) {
  -webkit-transform-origin: $left $top;
          transform-origin: $left $top;
}
/***********************************************
  Animations
***********************************************/
@mixin animation-duration($duration) {
 -webkit-animation-duration: $duration;
         animation-duration: $duration;
}
@mixin animation-direction($direction) {
 -webkit-animation-direction: $direction;
         animation-direction: $direction;
}
@mixin animation-timing-function($animation-timing) {
 -webkit-animation-timing-function: $animation-timing;
         animation-timing-function: $animation-timing;
}
@mixin animation-fill-mode($fill-mode) {
 -webkit-animation-fill-mode: $fill-mode;
         animation-fill-mode: $fill-mode;
}
@mixin animation-name($name...) {
 -webkit-animation-name: $name;
         animation-name: $name;
}
@mixin animation-delay($delay) {
 -webkit-animation-delay: $delay;
         animation-delay: $delay;
}
@mixin animation-iteration-count($count) {
 -webkit-animation-iteration-count: $count;
         animation-iteration-count: $count;
}
@mixin animation-play-state($state) {
 -webkit-animation-play-state: $state;
         animation-play-state: $state;
}

@mixin animation($name, $duration, $timingFn:linear, $delay:0, $iteration:1, $direction:normal, $fill-mode:none, $state:running) {
  @include animation-name($name);
  @include animation-duration($duration);
  @include animation-delay($delay);
  @include animation-direction($direction);
  @include animation-timing-function($timingFn);
  @include animation-iteration-count($iteration);
  @include animation-fill-mode($fill-mode);
  @include animation-play-state($state);
}

@mixin keyframes($animation-name) {
    @-webkit-keyframes #{$animation-name} {
        @content;
    }
    @-moz-keyframes #{$animation-name} {
        @content;
    }  
    @-ms-keyframes #{$animation-name} {
        @content;
    }
    @-o-keyframes #{$animation-name} {
        @content;
    }  
    @keyframes #{$animation-name} {
        @content;
    }
}


@include keyframes(falling-buttons) {
  0% {
    @include translate(0, -1080px);
  }
  80% {
    @include translate(0, 50px);
  }
  90% {
    @include translate(0, -25px);
  }
  100% {
    @include translate(0, 0);
  }
}

@include keyframes(clouds){
  0% {
    margin-left: -50%;
  }
  100% {
    margin-left: 100%;
  }
}



